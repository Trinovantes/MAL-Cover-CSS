diff --git a/node_modules/pino-http/index.d.ts b/node_modules/pino-http/index.d.ts
index 781a5a4..e664698 100644
--- a/node_modules/pino-http/index.d.ts
+++ b/node_modules/pino-http/index.d.ts
@@ -12,17 +12,17 @@ import { IncomingMessage, ServerResponse } from 'http';
 import pino from 'pino';
 import { err, req, res, SerializedError, SerializedRequest, SerializedResponse } from 'pino-std-serializers';
 
-declare function PinoHttp<IM = IncomingMessage, SR = ServerResponse, CustomLevels extends string = never>(opts?: Options<IM, SR, CustomLevels>, stream?: pino.DestinationStream): HttpLogger<IM, SR, CustomLevels>;
+declare function PinoHttp<IM = IncomingMessage, SR = ServerResponse, CustomLevels extends string = string>(opts?: Options<IM, SR, CustomLevels>, stream?: pino.DestinationStream): HttpLogger<IM, SR, CustomLevels>;
 
 declare function PinoHttp<IM = IncomingMessage, SR = ServerResponse>(stream?: pino.DestinationStream): HttpLogger<IM, SR>;
 
-export interface HttpLogger<IM = IncomingMessage, SR = ServerResponse, CustomLevels extends string = never> {
+export interface HttpLogger<IM = IncomingMessage, SR = ServerResponse, CustomLevels extends string = string> {
     (req: IM, res: SR, next?: () => void): void;
     logger: pino.Logger<CustomLevels>;
 }
 export type ReqId = number | string | object;
 
-export interface Options<IM = IncomingMessage, SR = ServerResponse, CustomLevels extends string = never> extends pino.LoggerOptions {
+export interface Options<IM = IncomingMessage, SR = ServerResponse, CustomLevels extends string = string> extends pino.LoggerOptions {
     logger?: pino.Logger<CustomLevels> | undefined;
     genReqId?: GenReqId<IM, SR> | undefined;
     useLevel?: pino.LevelWithSilent | undefined;
