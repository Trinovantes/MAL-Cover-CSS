diff --git a/pino.d.ts b/pino.d.ts
index 2759a1de9a27843ce85407538662ab7b231762e6..4711d3bd9c9dd27c4aa614f3c25a702c1a17ec23 100644
--- a/pino.d.ts
+++ b/pino.d.ts
@@ -27,7 +27,7 @@ declare namespace pino {
     type ThreadStream = any
 
     type TimeFn = () => string;
-    type MixinFn<CustomLevels extends string = never> = (mergeObject: object, level: number, logger:Logger<CustomLevels>) => object;
+    type MixinFn<CustomLevels extends string = string> = (mergeObject: object, level: number, logger:Logger<CustomLevels>) => object;
     type MixinMergeStrategyFn = (mergeObject: object, mixinObject: object) => object;
 
     type CustomLevelLogger<CustomLevels extends string, UseOnlyCustomLevels extends boolean = boolean> = { 
@@ -50,7 +50,7 @@ declare namespace pino {
     * A synchronous callback that will run on each creation of a new child.
     * @param child: The newly created child logger instance.
     */
-    type OnChildCallback<CustomLevels extends string = never> = (child: Logger<CustomLevels>) => void
+    type OnChildCallback<CustomLevels extends string = string> = (child: Logger<CustomLevels>) => void
 
     export interface redactOptions {
         paths: string[];
@@ -58,7 +58,7 @@ declare namespace pino {
         remove?: boolean;
     }
 
-    export interface LoggerExtras<CustomLevels extends string = never, UseOnlyCustomLevels extends boolean = boolean> extends EventEmitter {
+    export interface LoggerExtras<CustomLevels extends string = string, UseOnlyCustomLevels extends boolean = boolean> extends EventEmitter {
         /**
          * Exposes the Pino package version. Also available on the exported pino function.
          */
@@ -85,7 +85,7 @@ declare namespace pino {
          * @param options: an options object that will override child logger inherited options.
          * @returns a child logger instance.
          */
-        child<ChildCustomLevels extends string = never>(bindings: Bindings, options?: ChildLoggerOptions<ChildCustomLevels>): Logger<CustomLevels | ChildCustomLevels>;
+        child<ChildCustomLevels extends string = string>(bindings: Bindings, options?: ChildLoggerOptions<ChildCustomLevels>): Logger<CustomLevels | ChildCustomLevels>;
 
         /**
          * This can be used to modify the callback function on creation of a new child.
@@ -234,7 +234,7 @@ declare namespace pino {
     export type SerializerFn = (value: any) => any;
     export type WriteFn = (o: object) => void;
 
-    export type LevelChangeEventListener<CustomLevels extends string = never, UseOnlyCustomLevels extends boolean = boolean> = (
+    export type LevelChangeEventListener<CustomLevels extends string = string, UseOnlyCustomLevels extends boolean = boolean> = (
         lvl: LevelWithSilentOrString,
         val: number,
         prevLvl: LevelWithSilentOrString,
@@ -244,7 +244,7 @@ declare namespace pino {
 
     export type LogDescriptor = Record<string, any>;
 
-    export type Logger<CustomLevels extends string = never, UseOnlyCustomLevels extends boolean = boolean> = BaseLogger & LoggerExtras<CustomLevels> & CustomLevelLogger<CustomLevels, UseOnlyCustomLevels>;
+    export type Logger<CustomLevels extends string = string, UseOnlyCustomLevels extends boolean = boolean> = BaseLogger & LoggerExtras<CustomLevels> & CustomLevelLogger<CustomLevels, UseOnlyCustomLevels>;
 
     export type SerializedError = pinoStdSerializers.SerializedError;
     export type SerializedResponse = pinoStdSerializers.SerializedResponse;
@@ -345,7 +345,7 @@ declare namespace pino {
         <T, TMsg extends string = string>(obj: T, msg?: T extends string ? never : TMsg, ...args: ParseLogFnArgs<TMsg> extends [unknown, ...unknown[]] ? ParseLogFnArgs<TMsg> : unknown[]): void;
     }
 
-    export interface LoggerOptions<CustomLevels extends string = never, UseOnlyCustomLevels extends boolean = boolean> {
+    export interface LoggerOptions<CustomLevels extends string = string, UseOnlyCustomLevels extends boolean = boolean> {
         transport?: TransportSingleOptions | TransportMultiOptions | TransportPipelineOptions
         /**
          * Avoid error causes by circular references in the object tree. Default: `true`.
@@ -698,7 +698,7 @@ declare namespace pino {
         crlf?: boolean;
     }
 
-    export interface ChildLoggerOptions<CustomLevels extends string = never> {
+    export interface ChildLoggerOptions<CustomLevels extends string = string> {
         level?: LevelOrString;
         serializers?: { [key: string]: SerializerFn };
         customLevels?: { [level in CustomLevels]: number };
@@ -850,7 +850,7 @@ declare namespace pino {
      * relative protocol is enabled. Default: process.stdout
      * @returns a new logger instance.
      */
-    function pino<CustomLevels extends string = never, UseOnlyCustomLevels extends boolean = boolean>(optionsOrStream?: LoggerOptions<CustomLevels, UseOnlyCustomLevels> | DestinationStream): Logger<CustomLevels, UseOnlyCustomLevels>;
+    function pino<CustomLevels extends string = string, UseOnlyCustomLevels extends boolean = boolean>(optionsOrStream?: LoggerOptions<CustomLevels, UseOnlyCustomLevels> | DestinationStream): Logger<CustomLevels, UseOnlyCustomLevels>;
 
     /**
      * @param [options]: an options object
@@ -858,7 +858,7 @@ declare namespace pino {
      * relative protocol is enabled. Default: process.stdout
      * @returns a new logger instance.
      */
-    function pino<CustomLevels extends string = never, UseOnlyCustomLevels extends boolean = boolean>(options: LoggerOptions<CustomLevels, UseOnlyCustomLevels>, stream?: DestinationStream | undefined): Logger<CustomLevels, UseOnlyCustomLevels>;
+    function pino<CustomLevels extends string = string, UseOnlyCustomLevels extends boolean = boolean>(options: LoggerOptions<CustomLevels, UseOnlyCustomLevels>, stream?: DestinationStream | undefined): Logger<CustomLevels, UseOnlyCustomLevels>;
 }
 
 //// Callable default export
@@ -868,7 +868,7 @@ declare namespace pino {
  * relative protocol is enabled. Default: process.stdout
  * @returns a new logger instance.
  */
-declare function pino<CustomLevels extends string = never, UseOnlyCustomLevels extends boolean = boolean>(optionsOrStream?: pino.LoggerOptions<CustomLevels, UseOnlyCustomLevels> | pino.DestinationStream): pino.Logger<CustomLevels, UseOnlyCustomLevels>;
+declare function pino<CustomLevels extends string = string, UseOnlyCustomLevels extends boolean = boolean>(optionsOrStream?: pino.LoggerOptions<CustomLevels, UseOnlyCustomLevels> | pino.DestinationStream): pino.Logger<CustomLevels, UseOnlyCustomLevels>;
 
 /**
  * @param [options]: an options object
@@ -876,6 +876,6 @@ declare function pino<CustomLevels extends string = never, UseOnlyCustomLevels e
  * relative protocol is enabled. Default: process.stdout
  * @returns a new logger instance.
  */
-declare function pino<CustomLevels extends string = never, UseOnlyCustomLevels extends boolean = boolean>(options: pino.LoggerOptions<CustomLevels, UseOnlyCustomLevels>, stream?: pino.DestinationStream | undefined): pino.Logger<CustomLevels, UseOnlyCustomLevels>;
+declare function pino<CustomLevels extends string = string, UseOnlyCustomLevels extends boolean = boolean>(options: pino.LoggerOptions<CustomLevels, UseOnlyCustomLevels>, stream?: pino.DestinationStream | undefined): pino.Logger<CustomLevels, UseOnlyCustomLevels>;
 
 export = pino;
