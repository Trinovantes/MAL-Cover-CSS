map $http_x_forwarded_proto $real_proto {
    https       https;      # If we've been forwarded from a proxy that's set $http_x_forwarded_proto to https, return https
    default     $scheme;    # Otherwise default to $scheme
}

server {
    listen      80;
    server_name localhost;
    root        /app/dist/web;
    error_page  404 =404 /app.html;

    # Since nginx is inside Docker, it will not know its public port
    # This causes all redirects to be relative to root (e.g. / instead of localhost:80/)
    absolute_redirect off;

    location ~* \.(css)$ {
        access_log      off;
        add_header      Cache-Control "public, max-age=0, must-revalidate";

        return 302 $uri.proxy;
    }

    location ~* ^/(.*)\.proxy$ {
        access_log      off;
        add_header      Cache-Control "public, max-age=0, must-revalidate";

        try_files /$1 =404;
    }

    include /app/docker/snippets/general.conf;

    location ^~ /api/ {
        include /app/docker/snippets/proxy.conf;
        proxy_pass http://malcovercss-api:3000;
    }

    location / {
        # Remove trailing slash
        rewrite ^/(.*)/$ /$1 permanent;

        # Remove index.html from url
        if ($request_uri ~* "^(.*/)index\.html$") {
            return 301 $1;
        }

        # Do not cache index.html so it can fetch the correct assets
        add_header Cache-Control "no-store";

        # Exact route match or 404
        try_files $uri $uri/index.html /app.html;
    }
}
