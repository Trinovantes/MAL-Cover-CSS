name: Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - README.md
      - .vscode
      - .editorconfig
      - .gitignore

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env file
        run: echo "${{ secrets.ENV_DEV }}" > .env

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linter
        run: yarn lint

      - name: Run unit tests
        run: yarn unit

      - name: Cache playwright
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/yarn.lock', '**/package-lock.json') }}

      - name: Install playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: yarn playwright install --with-deps

      - name: Run playwright
        run: yarn e2e

      - name: Upload playwright results
        uses: actions/upload-artifact@v3
        with:
          retention-days: 30
          name: playwright
          path: tests/e2e/results/

  build:
    needs: test
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env file
        run: echo "${{ secrets.ENV_PROD }}" > .env

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull images from registry
        run: make pull || true

      - name: Build images
        run: make build

      - name: Push images to registry
        run: make push

      - name: Upload sourcemaps to sentry
        run: make sentry

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env file
        run: echo "${{ secrets.ENV_PROD }}" > .env

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Create SSH key to production
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KEYSCAN }}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Create and use remote context
        run: |
          docker context create remote --docker "host=ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}"
          docker context use remote

      - name: Pull images from registry
        run: make pull

      - name: Start containers
        run: make run

      - name: Prune old images
        run: docker image prune -f
